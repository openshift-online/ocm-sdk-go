{
  "openapi": "3.0.0",
  "info": {
    "version": "v1",
    "title": "accounts_mgmt",
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0"
    },
    "contact": {
      "name": "OCM Feedback",
      "email": "ocm-feedback@redhat.com"
    }
  },
  "servers": [
    {
      "description": "Production",
      "url": "https://api.openshift.com"
    },
    {
      "description": "Stage",
      "url": "https://api.stage.openshift.com"
    }
  ],
  "paths": {
    "/api/accounts_mgmt/v1": {
      "get": {
        "description": "Retrieves the version metadata.",
        "responses": {
          "200": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Metadata"
                }
              }
            }
          },
          "default": {
            "description": "Error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/accounts_mgmt/v1/access_token": {
      "post": {
        "description": "Returns access token generated from registries in docker format.",
        "responses": {
          "201": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessToken"
                }
              }
            }
          },
          "default": {
            "description": "Error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/accounts_mgmt/v1/accounts": {
      "post": {
        "description": "Creates a new account.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Account"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Account"
                }
              }
            }
          },
          "default": {
            "description": "Error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "get": {
        "description": "Retrieves the list of accounts.",
        "parameters": [
          {
            "name": "fetchLabels",
            "description": "If true, includes the labels on an account in the output. Could slow request response time.",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "fields",
            "description": "Projection\nThis field contains a comma-separated list of fields you'd like to get in\na result. No new fields can be added, only existing ones can be filtered.\nTo specify a field 'id' of a structure 'plan' use 'plan.id'.\nTo specify all fields of a structure 'labels' use 'labels.*'.\n",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "order",
            "description": "Order criteria.\n\nThe syntax of this parameter is similar to the syntax of the _order by_ clause of\na SQL statement. For example, in order to sort the\naccounts descending by name identifier the value should be:\n\n```sql\nname desc\n```\n\nIf the parameter isn't provided, or if the value is empty, then the order of the\nresults is undefined.",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "description": "Index of the requested page, where one corresponds to the first page.",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "search",
            "description": "Search criteria.\n\nThe syntax of this parameter is similar to the syntax of the _where_ clause\nof an SQL statement, but using the names of the attributes of the account\ninstead of the names of the columns of a table. For example, in order to\nretrieve accounts with username starting with my:\n\n```sql\nusername like 'my%'\n```\n\nIf the parameter isn't provided, or if the value is empty, then all the\nitems that the user has permission to see will be returned.",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "size",
            "description": "Maximum number of items that will be contained in the returned page.",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "items": {
                      "description": "Retrieved list of accounts.",
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Account"
                      }
                    },
                    "page": {
                      "description": "Index of the requested page, where one corresponds to the first page.",
                      "type": "integer",
                      "format": "int32"
                    },
                    "size": {
                      "description": "Maximum number of items that will be contained in the returned page.",
                      "type": "integer",
                      "format": "int32"
                    },
                    "total": {
                      "description": "Total number of items of the collection that match the search criteria,\nregardless of the size of the page.",
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/accounts_mgmt/v1/accounts/{account_id}": {
      "delete": {
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "deleteAssociatedResources",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success."
          },
          "default": {
            "description": "Error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "get": {
        "description": "Retrieves the details of the account.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Account"
                }
              }
            }
          },
          "default": {
            "description": "Error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "patch": {
        "description": "Updates the account.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Account"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Account"
                }
              }
            }
          },
          "default": {
            "description": "Error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/accounts_mgmt/v1/accounts/{account_id}/labels": {
      "post": {
        "description": "Create a new account/organization/subscription label.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Label"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Label"
                }
              }
            }
          },
          "default": {
            "description": "Error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "get": {
        "description": "Retrieves the list of labels of the account/organization/subscription.\n\nIMPORTANT: This collection doesn't currently support paging or searching, so the returned\n`page` will always be 1 and `size` and `total` will always be the total number of labels\nof the account/organization/subscription.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "page",
            "description": "Index of the returned page, where one corresponds to the first page. As this\ncollection doesn't support paging the result will always be `1`.",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "size",
            "description": "Number of items that will be contained in the returned page. As this collection\ndoesn't support paging or searching the result will always be the total number of\nlabels of the account/organization/subscription.",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "items": {
                      "description": "Retrieved list of cloud providers.",
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Label"
                      }
                    },
                    "page": {
                      "description": "Index of the returned page, where one corresponds to the first page. As this\ncollection doesn't support paging the result will always be `1`.",
                      "type": "integer",
                      "format": "int32"
                    },
                    "size": {
                      "description": "Number of items that will be contained in the returned page. As this collection\ndoesn't support paging or searching the result will always be the total number of\nlabels of the account/organization/subscription.",
                      "type": "integer",
                      "format": "int32"
                    },
                    "total": {
                      "description": "Total number of items of the collection that match the search criteria,\nregardless of the size of the page. As this collection doesn't support paging or\nsearching the result will always be the total number of labels of the account/organization/subscription.",
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/accounts_mgmt/v1/accounts/{account_id}/labels/{label_id}": {
      "delete": {
        "description": "Deletes the account label.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "label_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "Success."
          },
          "default": {
            "description": "Error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "get": {
        "description": "Retrieves the details of the label.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "label_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Label"
                }
              }
            }
          },
          "default": {
            "description": "Error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "patch": {
        "description": "Updates the account label.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "label_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Label"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Label"
                }
              }
            }
          },
          "default": {
            "description": "Error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/accounts_mgmt/v1/accounts/{account_id}/labels/{labels_id}": {
      "delete": {
        "description": "Deletes the account label.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "labels_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "Success."
          },
          "default": {
            "description": "Error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "get": {
        "description": "Retrieves the details of the label.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "labels_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Label"
                }
              }
            }
          },
          "default": {
            "description": "Error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "patch": {
        "description": "Updates the account label.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "labels_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Label"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Label"
                }
              }
            }
          },
          "default": {
            "description": "Error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/accounts_mgmt/v1/capabilities": {
      "get": {
        "description": "Retrieves a list of Capabilities.",
        "parameters": [
          {
            "name": "page",
            "description": "Index of the requested page, where one corresponds to the first page.",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "search",
            "description": "Search criteria.\n\nThe syntax of this parameter is similar to the syntax of the _where_ clause\nof an SQL statement, but using the names of the attributes of the organization\ninstead of the names of the columns of a table. For example, in order to\nretrieve organizations with name starting with my:\n\n```sql\nname like 'my%'\n```\n\nIf the parameter isn't provided, or if the value is empty, then all the\nitems that the user has permission to see will be returned.",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "size",
            "description": "Maximum number of items that will be contained in the returned page.",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "items": {
                      "description": "Retrieved list of Capabilities.",
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Capability"
                      }
                    },
                    "page": {
                      "description": "Index of the requested page, where one corresponds to the first page.",
                      "type": "integer",
                      "format": "int32"
                    },
                    "size": {
                      "description": "Maximum number of items that will be contained in the returned page.",
                      "type": "integer",
                      "format": "int32"
                    },
                    "total": {
                      "description": "Total number of items of the collection that match the search criteria,\nregardless of the size of the page.",
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/accounts_mgmt/v1/cloud_resources": {
      "post": {
        "description": "Creates a new cloud resource",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CloudResource"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudResource"
                }
              }
            }
          },
          "default": {
            "description": "Error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "get": {
        "description": "Retrieves the list of cloud resources.",
        "parameters": [
          {
            "name": "page",
            "description": "Index of the requested page, where one corresponds to the first page.",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "search",
            "description": "Search criteria.\n\nThe syntax of this parameter is similar to the syntax of the _where_ clause\nof an SQL statement, but using the names of the attributes of the cloud resource\ninstead of the names of the columns of a table.\n\nIf the parameter isn't provided, or if the value is empty, then all the\nitems that the user has permission to see will be returned.",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "size",
            "description": "Maximum number of items that will be contained in the returned page.",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "items": {
                      "description": "Retrieved list of cloud resources.",
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/CloudResource"
                      }
                    },
                    "page": {
                      "description": "Index of the requested page, where one corresponds to the first page.",
                      "type": "integer",
                      "format": "int32"
                    },
                    "size": {
                      "description": "Maximum number of items that will be contained in the returned page.",
                      "type": "integer",
                      "format": "int32"
                    },
                    "total": {
                      "description": "Total number of items of the collection that match the search criteria,\nregardless of the size of the page.",
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/accounts_mgmt/v1/cloud_resources/{cloud_resource_id}": {
      "delete": {
        "description": "Deletes the cloud resource.",
        "parameters": [
          {
            "name": "cloud_resource_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "Success."
          },
          "default": {
            "description": "Error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "get": {
        "description": "Retrieves the details of the cloud resource.",
        "parameters": [
          {
            "name": "cloud_resource_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudResource"
                }
              }
            }
          },
          "default": {
            "description": "Error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "patch": {
        "description": "Updates the cloud resource.",
        "parameters": [
          {
            "name": "cloud_resource_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CloudResource"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudResource"
                }
              }
            }
          },
          "default": {
            "description": "Error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/accounts_mgmt/v1/cluster_authorizations": {
      "post": {
        "description": "Authorizes new cluster creation against an existing subscription.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ClusterAuthorizationRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClusterAuthorizationResponse"
                }
              }
            }
          },
          "default": {
            "description": "Error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/accounts_mgmt/v1/cluster_registrations": {
      "post": {
        "description": "Finds or creates a cluster registration with a registry credential\ntoken and cluster identifier.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ClusterRegistrationRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClusterRegistrationResponse"
                }
              }
            }
          },
          "default": {
            "description": "Error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/accounts_mgmt/v1/current_access": {
      "post": {
        "description": "Creates a new role.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Role"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Role"
                }
              }
            }
          },
          "default": {
            "description": "Error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "get": {
        "description": "Retrieves a list of roles.",
        "parameters": [
          {
            "name": "page",
            "description": "Index of the requested page, where one corresponds to the first page.",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "search",
            "description": "Search criteria.\n\nThe syntax of this parameter is similar to the syntax of the _where_ clause\nof an SQL statement, but using the names of the attributes of the role\ninstead of the names of the columns of a table. For example, in order to\nretrieve roles named starting with `Organization`:\n\n```sql\nname like 'Organization%'\n```\n\nIf the parameter isn't provided, or if the value is empty, then all the\nitems that the user has permission to see will be returned.",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "size",
            "description": "Maximum number of items that will be contained in the returned page.",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "items": {
                      "description": "Retrieved list of roles.",
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Role"
                      }
                    },
                    "page": {
                      "description": "Index of the requested page, where one corresponds to the first page.",
                      "type": "integer",
                      "format": "int32"
                    },
                    "size": {
                      "description": "Maximum number of items that will be contained in the returned page.",
                      "type": "integer",
                      "format": "int32"
                    },
                    "total": {
                      "description": "Total number of items of the collection that match the search criteria,\nregardless of the size of the page.",
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/accounts_mgmt/v1/current_access/{role_id}": {
      "delete": {
        "description": "Deletes the role.",
        "parameters": [
          {
            "name": "role_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "Success."
          },
          "default": {
            "description": "Error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "get": {
        "description": "Retrieves the details of the role.",
        "parameters": [
          {
            "name": "role_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Role"
                }
              }
            }
          },
          "default": {
            "description": "Error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "patch": {
        "description": "Updates the role.",
        "parameters": [
          {
            "name": "role_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Role"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Role"
                }
              }
            }
          },
          "default": {
            "description": "Error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/accounts_mgmt/v1/current_account": {
      "get": {
        "description": "Retrieves the details of the account.",
        "responses": {
          "200": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Account"
                }
              }
            }
          },
          "default": {
            "description": "Error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/accounts_mgmt/v1/deleted_subscriptions": {
      "get": {
        "description": "Retrieves a list of DeletedSubscriptions.",
        "parameters": [
          {
            "name": "order",
            "description": "Order criteria.\n\nThe syntax of this parameter is similar to the syntax of the _order by_ clause of\na SQL statement. For example, in order to sort the\nDeletedSubscriptions descending by name identifier the value should be:\n\n```sql\nname desc\n```\n\nIf the parameter isn't provided, or if the value is empty, then the order of the\nresults is undefined.",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "description": "Index of the requested page, where one corresponds to the first page.",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "search",
            "description": "Search criteria.\n\nThe syntax of this parameter is similar to the syntax of the _where_ clause of a\nSQL statement, but using the names of the attributes of the DeletedSubscription instead\nof the names of the columns of a table. For example, in order to retrieve all the\nDeletedSubscriptions for managed clusters the value should be:\n\n```sql\nmanaged = 't'\n```\n\nIf the parameter isn't provided, or if the value is empty, then all the\nclusters that the user has permission to see will be returned.",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "size",
            "description": "Maximum number of items that will be contained in the returned page.",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "items": {
                      "description": "Retrieved list of DeletedSubscriptions.",
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/DeletedSubscription"
                      }
                    },
                    "page": {
                      "description": "Index of the requested page, where one corresponds to the first page.",
                      "type": "integer",
                      "format": "int32"
                    },
                    "size": {
                      "description": "Maximum number of items that will be contained in the returned page.",
                      "type": "integer",
                      "format": "int32"
                    },
                    "total": {
                      "description": "Total number of items of the collection that match the search criteria,\nregardless of the size of the page.",
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/accounts_mgmt/v1/feature_toggles/{feature_toggle_id}/query": {
      "post": {
        "description": "Retrieves the details of the feature toggle by providing query context",
        "parameters": [
          {
            "name": "feature_toggle_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FeatureToggleQueryRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FeatureToggle"
                }
              }
            }
          },
          "default": {
            "description": "Error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/accounts_mgmt/v1/labels": {
      "get": {
        "description": "Retrieves a list of labels.",
        "parameters": [
          {
            "name": "page",
            "description": "Index of the requested page, where one corresponds to the first page.",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "search",
            "description": "Search criteria.\n\nThe syntax of this parameter is similar to the syntax of the _where_ clause\nof an SQL statement, but using the names of the attributes of the organization\ninstead of the names of the columns of a table. For example, in order to\nretrieve labels with name starting with my:\n\n```sql\nname like 'my%'\n```\n\nIf the parameter isn't provided, or if the value is empty, then all the\nitems that the user has permission to see will be returned.",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "size",
            "description": "Maximum number of items that will be contained in the returned page.",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "items": {
                      "description": "Retrieved list of labels.",
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Label"
                      }
                    },
                    "page": {
                      "description": "Index of the requested page, where one corresponds to the first page.",
                      "type": "integer",
                      "format": "int32"
                    },
                    "size": {
                      "description": "Maximum number of items that will be contained in the returned page.",
                      "type": "integer",
                      "format": "int32"
                    },
                    "total": {
                      "description": "Total number of items of the collection that match the search criteria,\nregardless of the size of the page.",
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/accounts_mgmt/v1/notify": {
      "post": {
        "description": "Notify user related to subscription/cluster via email",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubscriptionNotify"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionNotify"
                }
              }
            }
          },
          "default": {
            "description": "Error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/accounts_mgmt/v1/organizations": {
      "post": {
        "description": "Creates a new organization.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Organization"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Organization"
                }
              }
            }
          },
          "default": {
            "description": "Error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "get": {
        "description": "Retrieves a list of organizations.",
        "parameters": [
          {
            "name": "fetchLabels",
            "description": "If true, includes the labels on an organization in the output. Could slow request response time.",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "fields",
            "description": "Projection\nThis field contains a comma-separated list of fields you'd like to get in\na result. No new fields can be added, only existing ones can be filtered.\nTo specify a field 'id' of a structure 'plan' use 'plan.id'.\nTo specify all fields of a structure 'labels' use 'labels.*'.\n",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "description": "Index of the requested page, where one corresponds to the first page.",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "search",
            "description": "Search criteria.\n\nThe syntax of this parameter is similar to the syntax of the _where_ clause\nof an SQL statement, but using the names of the attributes of the organization\ninstead of the names of the columns of a table. For example, in order to\nretrieve organizations with name starting with my:\n\n```sql\nname like 'my%'\n```\n\nIf the parameter isn't provided, or if the value is empty, then all the\nitems that the user has permission to see will be returned.",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "size",
            "description": "Maximum number of items that will be contained in the returned page.",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "items": {
                      "description": "Retrieved list of organizations.",
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Organization"
                      }
                    },
                    "page": {
                      "description": "Index of the requested page, where one corresponds to the first page.",
                      "type": "integer",
                      "format": "int32"
                    },
                    "size": {
                      "description": "Maximum number of items that will be contained in the returned page.",
                      "type": "integer",
                      "format": "int32"
                    },
                    "total": {
                      "description": "Total number of items of the collection that match the search criteria,\nregardless of the size of the page.",
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/accounts_mgmt/v1/organizations/{organization_id}": {
      "get": {
        "description": "Retrieves the details of the organization.",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Organization"
                }
              }
            }
          },
          "default": {
            "description": "Error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "patch": {
        "description": "Updates the organization.",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Organization"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Organization"
                }
              }
            }
          },
          "default": {
            "description": "Error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/accounts_mgmt/v1/organizations/{organization_id}/labels": {
      "post": {
        "description": "Create a new account/organization/subscription label.",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Label"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Label"
                }
              }
            }
          },
          "default": {
            "description": "Error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "get": {
        "description": "Retrieves the list of labels of the account/organization/subscription.\n\nIMPORTANT: This collection doesn't currently support paging or searching, so the returned\n`page` will always be 1 and `size` and `total` will always be the total number of labels\nof the account/organization/subscription.",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "page",
            "description": "Index of the returned page, where one corresponds to the first page. As this\ncollection doesn't support paging the result will always be `1`.",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "size",
            "description": "Number of items that will be contained in the returned page. As this collection\ndoesn't support paging or searching the result will always be the total number of\nlabels of the account/organization/subscription.",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "items": {
                      "description": "Retrieved list of cloud providers.",
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Label"
                      }
                    },
                    "page": {
                      "description": "Index of the returned page, where one corresponds to the first page. As this\ncollection doesn't support paging the result will always be `1`.",
                      "type": "integer",
                      "format": "int32"
                    },
                    "size": {
                      "description": "Number of items that will be contained in the returned page. As this collection\ndoesn't support paging or searching the result will always be the total number of\nlabels of the account/organization/subscription.",
                      "type": "integer",
                      "format": "int32"
                    },
                    "total": {
                      "description": "Total number of items of the collection that match the search criteria,\nregardless of the size of the page. As this collection doesn't support paging or\nsearching the result will always be the total number of labels of the account/organization/subscription.",
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/accounts_mgmt/v1/organizations/{organization_id}/labels/{label_id}": {
      "delete": {
        "description": "Deletes the account label.",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "label_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "Success."
          },
          "default": {
            "description": "Error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "get": {
        "description": "Retrieves the details of the label.",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "label_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Label"
                }
              }
            }
          },
          "default": {
            "description": "Error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "patch": {
        "description": "Updates the account label.",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "label_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Label"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Label"
                }
              }
            }
          },
          "default": {
            "description": "Error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/accounts_mgmt/v1/organizations/{organization_id}/labels/{labels_id}": {
      "delete": {
        "description": "Deletes the account label.",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "labels_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "Success."
          },
          "default": {
            "description": "Error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "get": {
        "description": "Retrieves the details of the label.",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "labels_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Label"
                }
              }
            }
          },
          "default": {
            "description": "Error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "patch": {
        "description": "Updates the account label.",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "labels_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Label"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Label"
                }
              }
            }
          },
          "default": {
            "description": "Error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/accounts_mgmt/v1/organizations/{organization_id}/quota_cost": {
      "get": {
        "description": "Retrieves the quota cost.",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "page",
            "description": "Index of the requested page, where one corresponds to the first page.",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "search",
            "description": "Search criteria.\n\nThe syntax of this parameter is similar to the syntax of the _where_ clause\nof an SQL statement, but using the names of the attributes of the quota\ncost instead of the names of the columns of a table. For example, in order\nto retrieve the quota cost for all add-ons:\n\n```sql\nquota_id LIKE 'add-on%'\n```\n\nIf the parameter isn't provided, or if the value is empty, then all the\nitems that the user has permission to see will be returned.",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "size",
            "description": "Maximum number of items that will be contained in the returned page.",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "items": {
                      "description": "Retrieved quota cost items.",
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/QuotaCost"
                      }
                    },
                    "page": {
                      "description": "Index of the requested page, where one corresponds to the first page.",
                      "type": "integer",
                      "format": "int32"
                    },
                    "size": {
                      "description": "Maximum number of items that will be contained in the returned page.",
                      "type": "integer",
                      "format": "int32"
                    },
                    "total": {
                      "description": "Total number of items of the collection that match the search criteria,\nregardless of the size of the page.",
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/accounts_mgmt/v1/organizations/{organization_id}/resource_quota": {
      "post": {
        "description": "Creates a new resource quota.",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResourceQuota"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceQuota"
                }
              }
            }
          },
          "default": {
            "description": "Error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "get": {
        "description": "Retrieves the list of resource quotas.",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "page",
            "description": "Index of the requested page, where one corresponds to the first page.",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "search",
            "description": "Search criteria.\n\nThe syntax of this parameter is similar to the syntax of the _where_ clause\nof an SQL statement, but using the names of the attributes of the account\ninstead of the names of the columns of a table. For example, in order to\nretrieve resource quota with resource_type cluster.aws:\n\n```sql\nresource_type = 'cluster.aws'\n```\n\nIf the parameter isn't provided, or if the value is empty, then all the\nitems that the user has permission to see will be returned.",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "size",
            "description": "Maximum number of items that will be contained in the returned page.",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "items": {
                      "description": "Retrieved list of resource quotas.",
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResourceQuota"
                      }
                    },
                    "page": {
                      "description": "Index of the requested page, where one corresponds to the first page.",
                      "type": "integer",
                      "format": "int32"
                    },
                    "size": {
                      "description": "Maximum number of items that will be contained in the returned page.",
                      "type": "integer",
                      "format": "int32"
                    },
                    "total": {
                      "description": "Total number of items of the collection that match the search criteria,\nregardless of the size of the page.",
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/accounts_mgmt/v1/organizations/{organization_id}/resource_quota/{resource_quota_id}": {
      "delete": {
        "description": "Deletes the resource quota.",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "resource_quota_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "Success."
          },
          "default": {
            "description": "Error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "get": {
        "description": "Retrieves the details of the resource quota.",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "resource_quota_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceQuota"
                }
              }
            }
          },
          "default": {
            "description": "Error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "patch": {
        "description": "Updates the resource quota.",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "resource_quota_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResourceQuota"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceQuota"
                }
              }
            }
          },
          "default": {
            "description": "Error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/accounts_mgmt/v1/organizations/{organization_id}/summary_dashboard": {
      "get": {
        "description": "Retrieves the details of the organization's summary dashboard.",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SummaryDashboard"
                }
              }
            }
          },
          "default": {
            "description": "Error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/accounts_mgmt/v1/permissions": {
      "post": {
        "description": "Creates a new permission.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Permission"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Permission"
                }
              }
            }
          },
          "default": {
            "description": "Error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "get": {
        "description": "Retrieves a list of permissions.",
        "parameters": [
          {
            "name": "page",
            "description": "Index of the requested page, where one corresponds to the first page.",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "size",
            "description": "Maximum number of items that will be contained in the returned page.",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "items": {
                      "description": "Retrieved list of permissions.",
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Permission"
                      }
                    },
                    "page": {
                      "description": "Index of the requested page, where one corresponds to the first page.",
                      "type": "integer",
                      "format": "int32"
                    },
                    "size": {
                      "description": "Maximum number of items that will be contained in the returned page.",
                      "type": "integer",
                      "format": "int32"
                    },
                    "total": {
                      "description": "Total number of items of the collection that match the search criteria,\nregardless of the size of the page.",
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/accounts_mgmt/v1/permissions/{permission_id}": {
      "delete": {
        "description": "Deletes the permission.",
        "parameters": [
          {
            "name": "permission_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "Success."
          },
          "default": {
            "description": "Error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "get": {
        "description": "Retrieves the details of the permission.",
        "parameters": [
          {
            "name": "permission_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Permission"
                }
              }
            }
          },
          "default": {
            "description": "Error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/accounts_mgmt/v1/pull_secrets": {
      "post": {
        "description": "Returns access token generated from registries in docker format.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PullSecretsRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessToken"
                }
              }
            }
          },
          "default": {
            "description": "Error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/accounts_mgmt/v1/pull_secrets/{pull_secret_id}": {
      "delete": {
        "description": "Deletes the pull secret.",
        "parameters": [
          {
            "name": "pull_secret_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "Success."
          },
          "default": {
            "description": "Error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/accounts_mgmt/v1/quota_authorizations": {
      "post": {
        "description": "Authorizes new quota creation against an existing subscription.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QuotaAuthorizationRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QuotaAuthorizationResponse"
                }
              }
            }
          },
          "default": {
            "description": "Error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/accounts_mgmt/v1/registries": {
      "get": {
        "description": "Retrieves a list of registries.",
        "parameters": [
          {
            "name": "page",
            "description": "Index of the requested page, where one corresponds to the first page.",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "size",
            "description": "Maximum number of items that will be contained in the returned page.",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "items": {
                      "description": "Retrieved list of registries.",
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Registry"
                      }
                    },
                    "page": {
                      "description": "Index of the requested page, where one corresponds to the first page.",
                      "type": "integer",
                      "format": "int32"
                    },
                    "size": {
                      "description": "Maximum number of items that will be contained in the returned page.",
                      "type": "integer",
                      "format": "int32"
                    },
                    "total": {
                      "description": "Total number of items of the collection that match the search criteria,\nregardless of the size of the page.",
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/accounts_mgmt/v1/registries/{registry_id}": {
      "get": {
        "description": "Retrieves the details of the registry.",
        "parameters": [
          {
            "name": "registry_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Registry"
                }
              }
            }
          },
          "default": {
            "description": "Error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/accounts_mgmt/v1/registry_credentials": {
      "post": {
        "description": "Creates a new registry credential.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistryCredential"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistryCredential"
                }
              }
            }
          },
          "default": {
            "description": "Error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "get": {
        "description": "Retrieves the list of accounts.",
        "parameters": [
          {
            "name": "order",
            "description": "Order criteria.\n\nThe syntax of this parameter is similar to the syntax of the _order by_ clause of\na SQL statement. For example, in order to sort the\nRegistryCredentials descending by username the value should be:\n\n```sql\nusername desc\n```\n\nIf the parameter isn't provided, or if the value is empty, then the order of the\nresults is undefined.",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "description": "Index of the requested page, where one corresponds to the first page.",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "search",
            "description": "Search criteria.\n\nThe syntax of this parameter is similar to the syntax of the _where_ clause of a\nSQL statement, but using the names of the attributes of the RegistryCredentials instead\nof the names of the columns of a table. For example, in order to retrieve all the\nRegistryCredentials for a user the value should be:\n\n```sql\nusername = 'abcxyz...'\n```\n\nIf the parameter isn't provided, or if the value is empty, then all the\nRegistryCredentials that the user has permission to see will be returned.",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "size",
            "description": "Maximum number of items that will be contained in the returned page.",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "items": {
                      "description": "Retrieved list of registry credentials.",
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/RegistryCredential"
                      }
                    },
                    "page": {
                      "description": "Index of the requested page, where one corresponds to the first page.",
                      "type": "integer",
                      "format": "int32"
                    },
                    "size": {
                      "description": "Maximum number of items that will be contained in the returned page.",
                      "type": "integer",
                      "format": "int32"
                    },
                    "total": {
                      "description": "Total number of items of the collection that match the search criteria,\nregardless of the size of the page.",
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/accounts_mgmt/v1/registry_credentials/{registry_credential_id}": {
      "delete": {
        "description": "Delete the registry credential",
        "parameters": [
          {
            "name": "registry_credential_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "Success."
          },
          "default": {
            "description": "Error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "get": {
        "description": "Retrieves the details of the registry credential.",
        "parameters": [
          {
            "name": "registry_credential_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistryCredential"
                }
              }
            }
          },
          "default": {
            "description": "Error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/accounts_mgmt/v1/resource_quota": {
      "post": {
        "description": "Creates a new resource quota.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResourceQuota"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceQuota"
                }
              }
            }
          },
          "default": {
            "description": "Error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "get": {
        "description": "Retrieves the list of resource quotas.",
        "parameters": [
          {
            "name": "page",
            "description": "Index of the requested page, where one corresponds to the first page.",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "search",
            "description": "Search criteria.\n\nThe syntax of this parameter is similar to the syntax of the _where_ clause\nof an SQL statement, but using the names of the attributes of the account\ninstead of the names of the columns of a table. For example, in order to\nretrieve resource quota with resource_type cluster.aws:\n\n```sql\nresource_type = 'cluster.aws'\n```\n\nIf the parameter isn't provided, or if the value is empty, then all the\nitems that the user has permission to see will be returned.",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "size",
            "description": "Maximum number of items that will be contained in the returned page.",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "items": {
                      "description": "Retrieved list of resource quotas.",
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResourceQuota"
                      }
                    },
                    "page": {
                      "description": "Index of the requested page, where one corresponds to the first page.",
                      "type": "integer",
                      "format": "int32"
                    },
                    "size": {
                      "description": "Maximum number of items that will be contained in the returned page.",
                      "type": "integer",
                      "format": "int32"
                    },
                    "total": {
                      "description": "Total number of items of the collection that match the search criteria,\nregardless of the size of the page.",
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/accounts_mgmt/v1/resource_quota/{resource_quota_id}": {
      "delete": {
        "description": "Deletes the resource quota.",
        "parameters": [
          {
            "name": "resource_quota_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "Success."
          },
          "default": {
            "description": "Error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "get": {
        "description": "Retrieves the details of the resource quota.",
        "parameters": [
          {
            "name": "resource_quota_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceQuota"
                }
              }
            }
          },
          "default": {
            "description": "Error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "patch": {
        "description": "Updates the resource quota.",
        "parameters": [
          {
            "name": "resource_quota_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResourceQuota"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceQuota"
                }
              }
            }
          },
          "default": {
            "description": "Error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/accounts_mgmt/v1/role_bindings": {
      "post": {
        "description": "Creates a new role binding.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RoleBinding"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoleBinding"
                }
              }
            }
          },
          "default": {
            "description": "Error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "get": {
        "description": "Retrieves a list of role bindings.",
        "parameters": [
          {
            "name": "page",
            "description": "Index of the requested page, where one corresponds to the first page.",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "search",
            "description": "Search criteria.\n\nThe syntax of this parameter is similar to the syntax of the _where_ clause\nof an SQL statement, but using the names of the attributes of the role binding\ninstead of the names of the columns of a table. For example, in order to\nretrieve role bindings with role_id AuthenticatedUser:\n\n```sql\nrole_id = 'AuthenticatedUser'\n```\n\nIf the parameter isn't provided, or if the value is empty, then all the\nitems that the user has permission to see will be returned.",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "size",
            "description": "Maximum number of items that will be contained in the returned page.",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "items": {
                      "description": "Retrieved list of role bindings.",
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/RoleBinding"
                      }
                    },
                    "page": {
                      "description": "Index of the requested page, where one corresponds to the first page.",
                      "type": "integer",
                      "format": "int32"
                    },
                    "size": {
                      "description": "Maximum number of items that will be contained in the returned page.",
                      "type": "integer",
                      "format": "int32"
                    },
                    "total": {
                      "description": "Total number of items of the collection that match the search criteria,\nregardless of the size of the page.",
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/accounts_mgmt/v1/role_bindings/{role_binding_id}": {
      "delete": {
        "description": "Deletes the role binding.",
        "parameters": [
          {
            "name": "role_binding_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "Success."
          },
          "default": {
            "description": "Error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "get": {
        "description": "Retrieves the details of the role binding.",
        "parameters": [
          {
            "name": "role_binding_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoleBinding"
                }
              }
            }
          },
          "default": {
            "description": "Error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "patch": {
        "description": "Updates the account.",
        "parameters": [
          {
            "name": "role_binding_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RoleBinding"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoleBinding"
                }
              }
            }
          },
          "default": {
            "description": "Error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/accounts_mgmt/v1/roles": {
      "post": {
        "description": "Creates a new role.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Role"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Role"
                }
              }
            }
          },
          "default": {
            "description": "Error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "get": {
        "description": "Retrieves a list of roles.",
        "parameters": [
          {
            "name": "page",
            "description": "Index of the requested page, where one corresponds to the first page.",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "search",
            "description": "Search criteria.\n\nThe syntax of this parameter is similar to the syntax of the _where_ clause\nof an SQL statement, but using the names of the attributes of the role\ninstead of the names of the columns of a table. For example, in order to\nretrieve roles named starting with `Organization`:\n\n```sql\nname like 'Organization%'\n```\n\nIf the parameter isn't provided, or if the value is empty, then all the\nitems that the user has permission to see will be returned.",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "size",
            "description": "Maximum number of items that will be contained in the returned page.",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "items": {
                      "description": "Retrieved list of roles.",
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Role"
                      }
                    },
                    "page": {
                      "description": "Index of the requested page, where one corresponds to the first page.",
                      "type": "integer",
                      "format": "int32"
                    },
                    "size": {
                      "description": "Maximum number of items that will be contained in the returned page.",
                      "type": "integer",
                      "format": "int32"
                    },
                    "total": {
                      "description": "Total number of items of the collection that match the search criteria,\nregardless of the size of the page.",
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/accounts_mgmt/v1/roles/{role_id}": {
      "delete": {
        "description": "Deletes the role.",
        "parameters": [
          {
            "name": "role_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "Success."
          },
          "default": {
            "description": "Error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "get": {
        "description": "Retrieves the details of the role.",
        "parameters": [
          {
            "name": "role_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Role"
                }
              }
            }
          },
          "default": {
            "description": "Error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "patch": {
        "description": "Updates the role.",
        "parameters": [
          {
            "name": "role_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Role"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Role"
                }
              }
            }
          },
          "default": {
            "description": "Error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/accounts_mgmt/v1/sku_rules": {
      "get": {
        "description": "Retrieves a list of Sku Rules.",
        "parameters": [
          {
            "name": "page",
            "description": "Index of the requested page, where one corresponds to the first page.",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "search",
            "description": "Search criteria.\n\nThe syntax of this parameter is similar to the syntax of the _where_ clause\nof an SQL statement, but using the names of the attributes of the SKU\ninstead of the names of the columns of a table. For example, in order to\nretrieve SKUS large sized resources:\n\n```sql\nresource_name like '%large'\n```\n\nIf the parameter isn't provided, or if the value is empty, then all the\nitems that the user has permission to see will be returned.",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "size",
            "description": "Maximum number of items that will be contained in the returned page.",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "items": {
                      "description": "Retrieved list of Sku Rules.",
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/SkuRule"
                      }
                    },
                    "page": {
                      "description": "Index of the requested page, where one corresponds to the first page.",
                      "type": "integer",
                      "format": "int32"
                    },
                    "size": {
                      "description": "Maximum number of items that will be contained in the returned page.",
                      "type": "integer",
                      "format": "int32"
                    },
                    "total": {
                      "description": "Total number of items of the collection that match the search criteria,\nregardless of the size of the page.",
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/accounts_mgmt/v1/sku_rules/{sku_rule_id}": {
      "get": {
        "description": "Retrieves the details of the Sku Rule.",
        "parameters": [
          {
            "name": "sku_rule_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SkuRule"
                }
              }
            }
          },
          "default": {
            "description": "Error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/accounts_mgmt/v1/subscriptions": {
      "get": {
        "description": "Retrieves a list of subscriptions.",
        "parameters": [
          {
            "name": "fetchAccounts",
            "description": "If true, includes the account reference information in the output. Could slow request response time.",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "fetchLabels",
            "description": "If true, includes the labels on a subscription in the output. Could slow request response time.",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "fields",
            "description": "Projection\nThis field contains a comma-separated list of fields you'd like to get in\na result. No new fields can be added, only existing ones can be filtered.\nTo specify a field 'id' of a structure 'plan' use 'plan.id'.\nTo specify all fields of a structure 'labels' use 'labels.*'.\n",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "labels",
            "description": "Filter subscriptions by a comma separated list of labels:\n\n[source]\n----\nenv=staging,department=sales\n----\n",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "order",
            "description": "Order criteria.\n\nThe syntax of this parameter is similar to the syntax of the _order by_ clause of\na SQL statement. For example, in order to sort the\nsubscriptions descending by name identifier the value should be:\n\n```sql\nname desc\n```\n\nIf the parameter isn't provided, or if the value is empty, then the order of the\nresults is undefined.",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "description": "Index of the requested page, where one corresponds to the first page.",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "search",
            "description": "Search criteria.\n\nThe syntax of this parameter is similar to the syntax of the _where_ clause of a\nSQL statement, but using the names of the attributes of the subscription instead\nof the names of the columns of a table. For example, in order to retrieve all the\nsubscriptions for managed clusters the value should be:\n\n```sql\nmanaged = 't'\n```\n\nIf the parameter isn't provided, or if the value is empty, then all the\nclusters that the user has permission to see will be returned.",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "size",
            "description": "Maximum number of items that will be contained in the returned page.",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "items": {
                      "description": "Retrieved list of subscriptions.",
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Subscription"
                      }
                    },
                    "page": {
                      "description": "Index of the requested page, where one corresponds to the first page.",
                      "type": "integer",
                      "format": "int32"
                    },
                    "size": {
                      "description": "Maximum number of items that will be contained in the returned page.",
                      "type": "integer",
                      "format": "int32"
                    },
                    "total": {
                      "description": "Total number of items of the collection that match the search criteria,\nregardless of the size of the page.",
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "description": "Create a new subscription and register a cluster for it.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubscriptionRegistration"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Subscription"
                }
              }
            }
          },
          "default": {
            "description": "Error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/accounts_mgmt/v1/subscriptions/labels": {
      "post": {
        "description": "Create a new account/organization/subscription label.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Label"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Label"
                }
              }
            }
          },
          "default": {
            "description": "Error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "get": {
        "description": "Retrieves the list of labels of the account/organization/subscription.\n\nIMPORTANT: This collection doesn't currently support paging or searching, so the returned\n`page` will always be 1 and `size` and `total` will always be the total number of labels\nof the account/organization/subscription.",
        "parameters": [
          {
            "name": "page",
            "description": "Index of the returned page, where one corresponds to the first page. As this\ncollection doesn't support paging the result will always be `1`.",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "size",
            "description": "Number of items that will be contained in the returned page. As this collection\ndoesn't support paging or searching the result will always be the total number of\nlabels of the account/organization/subscription.",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "items": {
                      "description": "Retrieved list of cloud providers.",
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Label"
                      }
                    },
                    "page": {
                      "description": "Index of the returned page, where one corresponds to the first page. As this\ncollection doesn't support paging the result will always be `1`.",
                      "type": "integer",
                      "format": "int32"
                    },
                    "size": {
                      "description": "Number of items that will be contained in the returned page. As this collection\ndoesn't support paging or searching the result will always be the total number of\nlabels of the account/organization/subscription.",
                      "type": "integer",
                      "format": "int32"
                    },
                    "total": {
                      "description": "Total number of items of the collection that match the search criteria,\nregardless of the size of the page. As this collection doesn't support paging or\nsearching the result will always be the total number of labels of the account/organization/subscription.",
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/accounts_mgmt/v1/subscriptions/labels/{label_id}": {
      "delete": {
        "description": "Deletes the account label.",
        "parameters": [
          {
            "name": "label_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "Success."
          },
          "default": {
            "description": "Error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "get": {
        "description": "Retrieves the details of the label.",
        "parameters": [
          {
            "name": "label_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Label"
                }
              }
            }
          },
          "default": {
            "description": "Error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "patch": {
        "description": "Updates the account label.",
        "parameters": [
          {
            "name": "label_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Label"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Label"
                }
              }
            }
          },
          "default": {
            "description": "Error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/accounts_mgmt/v1/subscriptions/labels/{labels_id}": {
      "delete": {
        "description": "Deletes the account label.",
        "parameters": [
          {
            "name": "labels_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "Success."
          },
          "default": {
            "description": "Error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "get": {
        "description": "Retrieves the details of the label.",
        "parameters": [
          {
            "name": "labels_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Label"
                }
              }
            }
          },
          "default": {
            "description": "Error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "patch": {
        "description": "Updates the account label.",
        "parameters": [
          {
            "name": "labels_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Label"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Label"
                }
              }
            }
          },
          "default": {
            "description": "Error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/accounts_mgmt/v1/subscriptions/{subscription_id}": {
      "delete": {
        "description": "Deletes the subscription by ID.",
        "parameters": [
          {
            "name": "subscription_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "Success."
          },
          "default": {
            "description": "Error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "get": {
        "description": "Retrieves the details of the subscription by ID.",
        "parameters": [
          {
            "name": "subscription_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Subscription"
                }
              }
            }
          },
          "default": {
            "description": "Error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "patch": {
        "description": "Update a subscription",
        "parameters": [
          {
            "name": "subscription_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Subscription"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Subscription"
                }
              }
            }
          },
          "default": {
            "description": "Error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/accounts_mgmt/v1/subscriptions/{subscription_id}/labels": {
      "post": {
        "description": "Create a new account/organization/subscription label.",
        "parameters": [
          {
            "name": "subscription_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Label"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Label"
                }
              }
            }
          },
          "default": {
            "description": "Error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "get": {
        "description": "Retrieves the list of labels of the account/organization/subscription.\n\nIMPORTANT: This collection doesn't currently support paging or searching, so the returned\n`page` will always be 1 and `size` and `total` will always be the total number of labels\nof the account/organization/subscription.",
        "parameters": [
          {
            "name": "subscription_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "page",
            "description": "Index of the returned page, where one corresponds to the first page. As this\ncollection doesn't support paging the result will always be `1`.",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "size",
            "description": "Number of items that will be contained in the returned page. As this collection\ndoesn't support paging or searching the result will always be the total number of\nlabels of the account/organization/subscription.",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "items": {
                      "description": "Retrieved list of cloud providers.",
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Label"
                      }
                    },
                    "page": {
                      "description": "Index of the returned page, where one corresponds to the first page. As this\ncollection doesn't support paging the result will always be `1`.",
                      "type": "integer",
                      "format": "int32"
                    },
                    "size": {
                      "description": "Number of items that will be contained in the returned page. As this collection\ndoesn't support paging or searching the result will always be the total number of\nlabels of the account/organization/subscription.",
                      "type": "integer",
                      "format": "int32"
                    },
                    "total": {
                      "description": "Total number of items of the collection that match the search criteria,\nregardless of the size of the page. As this collection doesn't support paging or\nsearching the result will always be the total number of labels of the account/organization/subscription.",
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/accounts_mgmt/v1/subscriptions/{subscription_id}/labels/{label_id}": {
      "delete": {
        "description": "Deletes the account label.",
        "parameters": [
          {
            "name": "subscription_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "label_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "Success."
          },
          "default": {
            "description": "Error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "get": {
        "description": "Retrieves the details of the label.",
        "parameters": [
          {
            "name": "subscription_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "label_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Label"
                }
              }
            }
          },
          "default": {
            "description": "Error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "patch": {
        "description": "Updates the account label.",
        "parameters": [
          {
            "name": "subscription_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "label_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Label"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Label"
                }
              }
            }
          },
          "default": {
            "description": "Error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/accounts_mgmt/v1/subscriptions/{subscription_id}/labels/{labels_id}": {
      "delete": {
        "description": "Deletes the account label.",
        "parameters": [
          {
            "name": "subscription_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "labels_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "Success."
          },
          "default": {
            "description": "Error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "get": {
        "description": "Retrieves the details of the label.",
        "parameters": [
          {
            "name": "subscription_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "labels_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Label"
                }
              }
            }
          },
          "default": {
            "description": "Error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "patch": {
        "description": "Updates the account label.",
        "parameters": [
          {
            "name": "subscription_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "labels_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Label"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Label"
                }
              }
            }
          },
          "default": {
            "description": "Error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/accounts_mgmt/v1/subscriptions/{subscription_id}/notify": {
      "post": {
        "description": "Notify user related to subscription via email",
        "parameters": [
          {
            "name": "subscription_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubscriptionNotify"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionNotify"
                }
              }
            }
          },
          "default": {
            "description": "Error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/accounts_mgmt/v1/subscriptions/{subscription_id}/reserved_resources": {
      "get": {
        "description": "Retrieves items of the collection of reserved resources by the subscription.",
        "parameters": [
          {
            "name": "subscription_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "page",
            "description": "Index of the requested page, where one corresponds to the first page.",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "size",
            "description": "Maximum number of items that will be contained in the returned page.",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "items": {
                      "description": "Retrieved list of reserved resources.",
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ReservedResource"
                      }
                    },
                    "page": {
                      "description": "Index of the requested page, where one corresponds to the first page.",
                      "type": "integer",
                      "format": "int32"
                    },
                    "size": {
                      "description": "Maximum number of items that will be contained in the returned page.",
                      "type": "integer",
                      "format": "int32"
                    },
                    "total": {
                      "description": "Total number of items of the collection that match the search criteria,\nregardless of the size of the page.",
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/accounts_mgmt/v1/subscriptions/{subscription_id}/reserved_resources/{reserved_resource_id}": {
      "get": {
        "description": "Retrieves the reserved resource.",
        "parameters": [
          {
            "name": "subscription_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "reserved_resource_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReservedResource"
                }
              }
            }
          },
          "default": {
            "description": "Error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/accounts_mgmt/v1/subscriptions/{subscription_id}/role_bindings": {
      "post": {
        "description": "Creates a new role binding.",
        "parameters": [
          {
            "name": "subscription_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RoleBinding"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoleBinding"
                }
              }
            }
          },
          "default": {
            "description": "Error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "get": {
        "description": "Retrieves a list of role bindings.",
        "parameters": [
          {
            "name": "subscription_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "page",
            "description": "Index of the requested page, where one corresponds to the first page.",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "search",
            "description": "Search criteria.\n\nThe syntax of this parameter is similar to the syntax of the _where_ clause\nof an SQL statement, but using the names of the attributes of the role binding\ninstead of the names of the columns of a table. For example, in order to\nretrieve role bindings with role_id AuthenticatedUser:\n\n```sql\nrole_id = 'AuthenticatedUser'\n```\n\nIf the parameter isn't provided, or if the value is empty, then all the\nitems that the user has permission to see will be returned.",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "size",
            "description": "Maximum number of items that will be contained in the returned page.",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "items": {
                      "description": "Retrieved list of role bindings.",
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/RoleBinding"
                      }
                    },
                    "page": {
                      "description": "Index of the requested page, where one corresponds to the first page.",
                      "type": "integer",
                      "format": "int32"
                    },
                    "size": {
                      "description": "Maximum number of items that will be contained in the returned page.",
                      "type": "integer",
                      "format": "int32"
                    },
                    "total": {
                      "description": "Total number of items of the collection that match the search criteria,\nregardless of the size of the page.",
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/accounts_mgmt/v1/subscriptions/{subscription_id}/role_bindings/{role_binding_id}": {
      "delete": {
        "description": "Deletes the role binding.",
        "parameters": [
          {
            "name": "subscription_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "role_binding_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "Success."
          },
          "default": {
            "description": "Error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "get": {
        "description": "Retrieves the details of the role binding.",
        "parameters": [
          {
            "name": "subscription_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "role_binding_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoleBinding"
                }
              }
            }
          },
          "default": {
            "description": "Error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "patch": {
        "description": "Updates the account.",
        "parameters": [
          {
            "name": "subscription_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "role_binding_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RoleBinding"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoleBinding"
                }
              }
            }
          },
          "default": {
            "description": "Error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/accounts_mgmt/v1/support_cases": {
      "post": {
        "description": "Create a support case related to Hydra",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SupportCaseRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SupportCaseResponse"
                }
              }
            }
          },
          "default": {
            "description": "Error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/accounts_mgmt/v1/support_cases/{support_case_id}": {
      "delete": {
        "description": "Deletes the support case by Case ID.",
        "parameters": [
          {
            "name": "support_case_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "Success."
          },
          "default": {
            "description": "Error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/accounts_mgmt/v1/token_authorization": {
      "post": {
        "description": "Returns a specific account based on the given pull secret",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TokenAuthorizationRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenAuthorizationResponse"
                }
              }
            }
          },
          "default": {
            "description": "Error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Metadata": {
        "description": "Version metadata.",
        "properties": {
          "server_version": {
            "description": "Version of the server.",
            "type": "string"
          }
        }
      },
      "AccessToken": {
        "properties": {
          "auths": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/AccessTokenAuth"
            }
          }
        }
      },
      "AccessTokenAuth": {
        "properties": {
          "auth": {
            "type": "string"
          },
          "email": {
            "type": "string"
          }
        }
      },
      "Account": {
        "properties": {
          "kind": {
            "description": "Indicates the type of this object. Will be 'Account' if this is a complete object or 'AccountLink' if it is just a link.",
            "type": "string"
          },
          "id": {
            "description": "Unique identifier of the object.",
            "type": "string"
          },
          "href": {
            "description": "Self link.",
            "type": "string"
          },
          "ban_code": {
            "type": "string"
          },
          "ban_description": {
            "type": "string"
          },
          "banned": {
            "type": "boolean"
          },
          "capabilities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Capability"
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "email": {
            "type": "string"
          },
          "first_name": {
            "type": "string"
          },
          "labels": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Label"
            }
          },
          "last_name": {
            "type": "string"
          },
          "organization": {
            "$ref": "#/components/schemas/Organization"
          },
          "rhit_account_id": {
            "description": "RhitAccountID will be deprecated in favor of RhitWebUserId",
            "type": "string"
          },
          "rhit_web_user_id": {
            "type": "string"
          },
          "service_account": {
            "type": "boolean"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "username": {
            "type": "string"
          }
        }
      },
      "Action": {
        "description": "Possible actions for a permission.",
        "type": "string",
        "enum": [
          "create",
          "delete",
          "get",
          "list",
          "update"
        ]
      },
      "BillingModel": {
        "description": "Billing model for subscripiton and reserved_resource resources.",
        "type": "string",
        "enum": [
          "marketplace",
          "marketplace-aws",
          "marketplace-rhm",
          "marketplace-azure",
          "standard"
        ]
      },
      "Capability": {
        "description": "Capability model that represents internal labels with a key that matches a set list defined in AMS (defined in pkg/api/capability_types.go).",
        "properties": {
          "inherited": {
            "description": "Dynamic attribute of the capability that tells us that this capability was inherited from the subscription's organization. ",
            "type": "boolean"
          },
          "name": {
            "description": "Name of the capability label.",
            "type": "string"
          },
          "value": {
            "description": "Value that can be assigned to the capability (eg. \"true\", \"false\" etc).",
            "type": "string"
          }
        }
      },
      "CloudAccount": {
        "properties": {
          "cloud_account_id": {
            "type": "string"
          },
          "cloud_provider_id": {
            "type": "string"
          },
          "contracts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Contract"
            }
          }
        }
      },
      "CloudResource": {
        "properties": {
          "kind": {
            "description": "Indicates the type of this object. Will be 'CloudResource' if this is a complete object or 'CloudResourceLink' if it is just a link.",
            "type": "string"
          },
          "id": {
            "description": "Unique identifier of the object.",
            "type": "string"
          },
          "href": {
            "description": "Self link.",
            "type": "string"
          },
          "active": {
            "type": "boolean"
          },
          "category": {
            "type": "string"
          },
          "category_pretty": {
            "type": "string"
          },
          "cloud_provider": {
            "type": "string"
          },
          "cpu_cores": {
            "type": "integer",
            "format": "int32"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "generic_name": {
            "type": "string"
          },
          "memory": {
            "type": "integer",
            "format": "int32"
          },
          "memory_pretty": {
            "type": "string"
          },
          "name_pretty": {
            "type": "string"
          },
          "resource_type": {
            "type": "string"
          },
          "size_pretty": {
            "type": "string"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "ClusterAuthorizationRequest": {
        "properties": {
          "byoc": {
            "type": "boolean"
          },
          "account_username": {
            "type": "string"
          },
          "availability_zone": {
            "type": "string"
          },
          "cloud_account_id": {
            "type": "string"
          },
          "cloud_provider_id": {
            "type": "string"
          },
          "cluster_id": {
            "type": "string"
          },
          "disconnected": {
            "type": "boolean"
          },
          "display_name": {
            "type": "string"
          },
          "external_cluster_id": {
            "type": "string"
          },
          "managed": {
            "type": "boolean"
          },
          "product_id": {
            "type": "string"
          },
          "product_category": {
            "type": "string"
          },
          "quota_version": {
            "type": "string"
          },
          "reserve": {
            "type": "boolean"
          },
          "resources": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReservedResource"
            }
          }
        }
      },
      "ClusterAuthorizationResponse": {
        "properties": {
          "allowed": {
            "type": "boolean"
          },
          "excess_resources": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReservedResource"
            }
          },
          "subscription": {
            "$ref": "#/components/schemas/Subscription"
          }
        }
      },
      "ClusterMetricsNodes": {
        "properties": {
          "compute": {
            "type": "number",
            "format": "float"
          },
          "infra": {
            "type": "number",
            "format": "float"
          },
          "master": {
            "type": "number",
            "format": "float"
          },
          "total": {
            "type": "number",
            "format": "float"
          }
        }
      },
      "ClusterRegistrationRequest": {
        "properties": {
          "authorization_token": {
            "type": "string"
          },
          "cluster_id": {
            "type": "string"
          }
        }
      },
      "ClusterRegistrationResponse": {
        "properties": {
          "account_id": {
            "type": "string"
          },
          "authorization_token": {
            "type": "string"
          },
          "cluster_id": {
            "type": "string"
          },
          "expires_at": {
            "description": "Cluster registration expiration.",
            "type": "string"
          }
        }
      },
      "ClusterResource": {
        "properties": {
          "total": {
            "$ref": "#/components/schemas/ValueUnit"
          },
          "updated_timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "used": {
            "$ref": "#/components/schemas/ValueUnit"
          }
        }
      },
      "ClusterUpgrade": {
        "properties": {
          "available": {
            "type": "boolean"
          },
          "state": {
            "type": "string"
          },
          "updated_timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "version": {
            "type": "string"
          }
        }
      },
      "Contract": {
        "properties": {
          "dimensions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ContractDimension"
            }
          },
          "end_date": {
            "type": "string",
            "format": "date-time"
          },
          "start_date": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "ContractDimension": {
        "properties": {
          "name": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        }
      },
      "DeletedSubscription": {
        "properties": {
          "kind": {
            "description": "Indicates the type of this object. Will be 'DeletedSubscription' if this is a complete object or 'DeletedSubscriptionLink' if it is just a link.",
            "type": "string"
          },
          "id": {
            "description": "Unique identifier of the object.",
            "type": "string"
          },
          "href": {
            "description": "Self link.",
            "type": "string"
          },
          "billing_expiration_date": {
            "type": "string",
            "format": "date-time"
          },
          "billing_marketplace_account": {
            "type": "string"
          },
          "cloud_account_id": {
            "type": "string"
          },
          "cloud_provider_id": {
            "type": "string"
          },
          "cluster_id": {
            "type": "string"
          },
          "cluster_billing_model": {
            "$ref": "#/components/schemas/BillingModel"
          },
          "console_url": {
            "type": "string"
          },
          "consumer_uuid": {
            "type": "string"
          },
          "cpu_total": {
            "type": "integer",
            "format": "int32"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "creator_id": {
            "type": "string"
          },
          "display_name": {
            "type": "string"
          },
          "external_cluster_id": {
            "type": "string"
          },
          "last_reconcile_date": {
            "type": "string",
            "format": "date-time"
          },
          "last_released_at": {
            "type": "string",
            "format": "date-time"
          },
          "last_telemetry_date": {
            "type": "string",
            "format": "date-time"
          },
          "managed": {
            "type": "boolean"
          },
          "metrics": {
            "type": "string"
          },
          "organization_id": {
            "type": "string"
          },
          "plan_id": {
            "type": "string"
          },
          "product_bundle": {
            "type": "string"
          },
          "provenance": {
            "type": "string"
          },
          "query_timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "region_id": {
            "type": "string"
          },
          "released": {
            "type": "boolean"
          },
          "service_level": {
            "type": "string"
          },
          "socket_total": {
            "type": "integer",
            "format": "int32"
          },
          "status": {
            "type": "string"
          },
          "support_level": {
            "type": "string"
          },
          "system_units": {
            "type": "string"
          },
          "trial_end_date": {
            "type": "string",
            "format": "date-time"
          },
          "usage": {
            "type": "string"
          }
        }
      },
      "FeatureToggle": {
        "properties": {
          "kind": {
            "description": "Indicates the type of this object. Will be 'FeatureToggle' if this is a complete object or 'FeatureToggleLink' if it is just a link.",
            "type": "string"
          },
          "id": {
            "description": "Unique identifier of the object.",
            "type": "string"
          },
          "href": {
            "description": "Self link.",
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          }
        }
      },
      "FeatureToggleQueryRequest": {
        "properties": {
          "organization_id": {
            "type": "string"
          }
        }
      },
      "Label": {
        "properties": {
          "kind": {
            "description": "Indicates the type of this object. Will be 'Label' if this is a complete object or 'LabelLink' if it is just a link.",
            "type": "string"
          },
          "id": {
            "description": "Unique identifier of the object.",
            "type": "string"
          },
          "href": {
            "description": "Self link.",
            "type": "string"
          },
          "account_id": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "internal": {
            "type": "boolean"
          },
          "key": {
            "type": "string"
          },
          "managed_by": {
            "type": "string"
          },
          "organization_id": {
            "type": "string"
          },
          "subscription_id": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "value": {
            "type": "string"
          }
        }
      },
      "Organization": {
        "properties": {
          "kind": {
            "description": "Indicates the type of this object. Will be 'Organization' if this is a complete object or 'OrganizationLink' if it is just a link.",
            "type": "string"
          },
          "id": {
            "description": "Unique identifier of the object.",
            "type": "string"
          },
          "href": {
            "description": "Self link.",
            "type": "string"
          },
          "capabilities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Capability"
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "ebs_account_id": {
            "type": "string"
          },
          "external_id": {
            "type": "string"
          },
          "labels": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Label"
            }
          },
          "name": {
            "type": "string"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Permission": {
        "properties": {
          "kind": {
            "description": "Indicates the type of this object. Will be 'Permission' if this is a complete object or 'PermissionLink' if it is just a link.",
            "type": "string"
          },
          "id": {
            "description": "Unique identifier of the object.",
            "type": "string"
          },
          "href": {
            "description": "Self link.",
            "type": "string"
          },
          "action": {
            "$ref": "#/components/schemas/Action"
          },
          "resource": {
            "type": "string"
          }
        }
      },
      "Plan": {
        "properties": {
          "kind": {
            "description": "Indicates the type of this object. Will be 'Plan' if this is a complete object or 'PlanLink' if it is just a link.",
            "type": "string"
          },
          "id": {
            "description": "Unique identifier of the object.",
            "type": "string"
          },
          "href": {
            "description": "Self link.",
            "type": "string"
          },
          "category": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string"
          }
        }
      },
      "PlanID": {
        "description": "Plan ID of subscription.",
        "type": "string",
        "enum": [
          "ocp"
        ]
      },
      "PullSecretsRequest": {
        "properties": {
          "external_resource_id": {
            "type": "string"
          }
        }
      },
      "QuotaAuthorizationRequest": {
        "properties": {
          "account_username": {
            "type": "string"
          },
          "availability_zone": {
            "type": "string"
          },
          "display_name": {
            "type": "string"
          },
          "product_id": {
            "type": "string"
          },
          "product_category": {
            "type": "string"
          },
          "quota_version": {
            "type": "string"
          },
          "reserve": {
            "type": "boolean"
          },
          "resources": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReservedResource"
            }
          }
        }
      },
      "QuotaAuthorizationResponse": {
        "properties": {
          "allowed": {
            "type": "boolean"
          },
          "excess_resources": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReservedResource"
            }
          },
          "subscription": {
            "$ref": "#/components/schemas/Subscription"
          }
        }
      },
      "QuotaCost": {
        "properties": {
          "allowed": {
            "type": "integer",
            "format": "int32"
          },
          "cloud_accounts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CloudAccount"
            }
          },
          "consumed": {
            "type": "integer",
            "format": "int32"
          },
          "organization_id": {
            "type": "string"
          },
          "quota_id": {
            "type": "string"
          },
          "related_resources": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelatedResource"
            }
          },
          "version": {
            "type": "string"
          }
        }
      },
      "QuotaRules": {
        "properties": {
          "availability_zone": {
            "type": "string"
          },
          "billing_model": {
            "type": "string"
          },
          "byoc": {
            "type": "string"
          },
          "cloud": {
            "type": "string"
          },
          "cost": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          },
          "product": {
            "type": "string"
          },
          "quota_id": {
            "type": "string"
          }
        }
      },
      "Registry": {
        "properties": {
          "kind": {
            "description": "Indicates the type of this object. Will be 'Registry' if this is a complete object or 'RegistryLink' if it is just a link.",
            "type": "string"
          },
          "id": {
            "description": "Unique identifier of the object.",
            "type": "string"
          },
          "href": {
            "description": "Self link.",
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "cloud_alias": {
            "type": "boolean"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "name": {
            "type": "string"
          },
          "org_name": {
            "type": "string"
          },
          "team_name": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "RegistryCredential": {
        "properties": {
          "kind": {
            "description": "Indicates the type of this object. Will be 'RegistryCredential' if this is a complete object or 'RegistryCredentialLink' if it is just a link.",
            "type": "string"
          },
          "id": {
            "description": "Unique identifier of the object.",
            "type": "string"
          },
          "href": {
            "description": "Self link.",
            "type": "string"
          },
          "account": {
            "$ref": "#/components/schemas/Account"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "external_resource_id": {
            "type": "string"
          },
          "registry": {
            "$ref": "#/components/schemas/Registry"
          },
          "token": {
            "type": "string"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "username": {
            "type": "string"
          }
        }
      },
      "RelatedResource": {
        "description": "Resource which can be provisioned using the allowed quota.",
        "properties": {
          "byoc": {
            "type": "string"
          },
          "availability_zone_type": {
            "type": "string"
          },
          "billing_model": {
            "type": "string"
          },
          "cloud_provider": {
            "type": "string"
          },
          "cost": {
            "type": "integer",
            "format": "int32"
          },
          "product": {
            "type": "string"
          },
          "resource_name": {
            "type": "string"
          },
          "resource_type": {
            "type": "string"
          }
        }
      },
      "ReservedResource": {
        "properties": {
          "byoc": {
            "type": "boolean"
          },
          "availability_zone_type": {
            "type": "string"
          },
          "billing_marketplace_account": {
            "type": "string"
          },
          "billing_model": {
            "$ref": "#/components/schemas/BillingModel"
          },
          "count": {
            "type": "integer",
            "format": "int32"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "resource_name": {
            "type": "string"
          },
          "resource_type": {
            "type": "string"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Resource": {
        "description": "Identifies computing resources",
        "properties": {
          "kind": {
            "description": "Indicates the type of this object. Will be 'Resource' if this is a complete object or 'ResourceLink' if it is just a link.",
            "type": "string"
          },
          "id": {
            "description": "Unique identifier of the object.",
            "type": "string"
          },
          "href": {
            "description": "Self link.",
            "type": "string"
          },
          "byoc": {
            "type": "boolean"
          },
          "sku": {
            "type": "string"
          },
          "allowed": {
            "description": "Number of allowed nodes",
            "type": "integer",
            "format": "int32"
          },
          "availability_zone_type": {
            "type": "string"
          },
          "resource_name": {
            "description": "platform-specific name, such as \"M5.2Xlarge\" for a type of EC2 node",
            "type": "string"
          },
          "resource_type": {
            "type": "string"
          }
        }
      },
      "ResourceQuota": {
        "properties": {
          "kind": {
            "description": "Indicates the type of this object. Will be 'ResourceQuota' if this is a complete object or 'ResourceQuotaLink' if it is just a link.",
            "type": "string"
          },
          "id": {
            "description": "Unique identifier of the object.",
            "type": "string"
          },
          "href": {
            "description": "Self link.",
            "type": "string"
          },
          "sku": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "organization_id": {
            "type": "string"
          },
          "sku_count": {
            "type": "integer",
            "format": "int32"
          },
          "type": {
            "type": "string"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Role": {
        "properties": {
          "kind": {
            "description": "Indicates the type of this object. Will be 'Role' if this is a complete object or 'RoleLink' if it is just a link.",
            "type": "string"
          },
          "id": {
            "description": "Unique identifier of the object.",
            "type": "string"
          },
          "href": {
            "description": "Self link.",
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "permissions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Permission"
            }
          }
        }
      },
      "RoleBinding": {
        "properties": {
          "kind": {
            "description": "Indicates the type of this object. Will be 'RoleBinding' if this is a complete object or 'RoleBindingLink' if it is just a link.",
            "type": "string"
          },
          "id": {
            "description": "Unique identifier of the object.",
            "type": "string"
          },
          "href": {
            "description": "Self link.",
            "type": "string"
          },
          "account": {
            "$ref": "#/components/schemas/Account"
          },
          "account_id": {
            "type": "string"
          },
          "config_managed": {
            "type": "boolean"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "managed_by": {
            "type": "string"
          },
          "organization": {
            "$ref": "#/components/schemas/Organization"
          },
          "organization_id": {
            "type": "string"
          },
          "role": {
            "$ref": "#/components/schemas/Role"
          },
          "role_id": {
            "type": "string"
          },
          "subscription": {
            "$ref": "#/components/schemas/Subscription"
          },
          "subscription_id": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "SkuRule": {
        "description": "Identifies sku rule",
        "properties": {
          "kind": {
            "description": "Indicates the type of this object. Will be 'SkuRule' if this is a complete object or 'SkuRuleLink' if it is just a link.",
            "type": "string"
          },
          "id": {
            "description": "Unique identifier of the object.",
            "type": "string"
          },
          "href": {
            "description": "Self link.",
            "type": "string"
          },
          "allowed": {
            "description": "Specifies the allowed parameter for calculation",
            "type": "integer",
            "format": "int32"
          },
          "quota_id": {
            "description": "Specifies the quota id",
            "type": "string"
          },
          "sku": {
            "description": "Specifies the sku, such as \"\"MW00504\"\"",
            "type": "string"
          }
        }
      },
      "Subscription": {
        "properties": {
          "kind": {
            "description": "Indicates the type of this object. Will be 'Subscription' if this is a complete object or 'SubscriptionLink' if it is just a link.",
            "type": "string"
          },
          "id": {
            "description": "Unique identifier of the object.",
            "type": "string"
          },
          "href": {
            "description": "Self link.",
            "type": "string"
          },
          "billing_marketplace_account": {
            "type": "string"
          },
          "capabilities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Capability"
            }
          },
          "cloud_account_id": {
            "type": "string"
          },
          "cloud_provider_id": {
            "type": "string"
          },
          "cluster_id": {
            "type": "string"
          },
          "cluster_billing_model": {
            "$ref": "#/components/schemas/BillingModel"
          },
          "console_url": {
            "type": "string"
          },
          "consumer_uuid": {
            "type": "string"
          },
          "cpu_total": {
            "type": "integer",
            "format": "int32"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "creator": {
            "description": "Link to the account that created the subscription.",
            "$ref": "#/components/schemas/Account"
          },
          "display_name": {
            "type": "string"
          },
          "external_cluster_id": {
            "type": "string"
          },
          "labels": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Label"
            }
          },
          "last_reconcile_date": {
            "description": "Last time this subscription were reconciled about cluster usage.",
            "type": "string",
            "format": "date-time"
          },
          "last_released_at": {
            "description": "Last time status was set to Released for this cluster/subscription.",
            "type": "string",
            "format": "date-time"
          },
          "last_telemetry_date": {
            "description": "Last telemetry authorization request for this  cluster/subscription in Unix time",
            "type": "string",
            "format": "date-time"
          },
          "managed": {
            "type": "boolean"
          },
          "metrics": {
            "description": "Metrics array. One or zero elements will present.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubscriptionMetrics"
            }
          },
          "notification_contacts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Account"
            }
          },
          "organization_id": {
            "type": "string"
          },
          "plan": {
            "$ref": "#/components/schemas/Plan"
          },
          "product_bundle": {
            "type": "string"
          },
          "provenance": {
            "description": "The origin of cluster registration (values are defined in AMS at pkg/api/subscription_types.go).",
            "type": "string"
          },
          "region_id": {
            "type": "string"
          },
          "released": {
            "description": "Flag used to denote whether or not the owner of the cluster has released the ownership and ready to be transferred to a different user.",
            "type": "boolean"
          },
          "service_level": {
            "type": "string"
          },
          "socket_total": {
            "type": "integer",
            "format": "int32"
          },
          "status": {
            "type": "string"
          },
          "support_level": {
            "type": "string"
          },
          "system_units": {
            "type": "string"
          },
          "trial_end_date": {
            "description": "If the subscription is a trial, date the trial ends.",
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "usage": {
            "type": "string"
          }
        }
      },
      "SubscriptionMetrics": {
        "description": "Each field is a metric fetched for a specific Subscription's cluster.",
        "properties": {
          "cloud_provider": {
            "type": "string"
          },
          "compute_nodes_cpu": {
            "$ref": "#/components/schemas/ClusterResource"
          },
          "compute_nodes_memory": {
            "$ref": "#/components/schemas/ClusterResource"
          },
          "compute_nodes_sockets": {
            "$ref": "#/components/schemas/ClusterResource"
          },
          "console_url": {
            "type": "string"
          },
          "cpu": {
            "$ref": "#/components/schemas/ClusterResource"
          },
          "critical_alerts_firing": {
            "type": "number",
            "format": "float"
          },
          "health_state": {
            "type": "string"
          },
          "memory": {
            "$ref": "#/components/schemas/ClusterResource"
          },
          "nodes": {
            "$ref": "#/components/schemas/ClusterMetricsNodes"
          },
          "openshift_version": {
            "type": "string"
          },
          "operating_system": {
            "type": "string"
          },
          "operators_condition_failing": {
            "type": "number",
            "format": "float"
          },
          "region": {
            "type": "string"
          },
          "sockets": {
            "$ref": "#/components/schemas/ClusterResource"
          },
          "state": {
            "type": "string"
          },
          "state_description": {
            "type": "string"
          },
          "storage": {
            "$ref": "#/components/schemas/ClusterResource"
          },
          "subscription_cpu_total": {
            "type": "number",
            "format": "float"
          },
          "subscription_obligation_exists": {
            "type": "number",
            "format": "float"
          },
          "subscription_socket_total": {
            "type": "number",
            "format": "float"
          },
          "upgrade": {
            "$ref": "#/components/schemas/ClusterUpgrade"
          }
        }
      },
      "SubscriptionNotify": {
        "description": "This struct is a request to send a templated email to a user related to this\nsubscription.",
        "properties": {
          "bcc_address": {
            "description": "The BCC address to be included on the email that is sent",
            "type": "string"
          },
          "cluster_id": {
            "description": "Indicates which Cluster (internal id) the resource type belongs to",
            "type": "string"
          },
          "cluster_uuid": {
            "description": "Indicates which Cluster (external id) the resource type belongs to",
            "type": "string"
          },
          "include_red_hat_associates": {
            "description": "Indicates whether to include red hat associates in the email notification",
            "type": "boolean"
          },
          "internal_only": {
            "description": "Indicates whether the service log is internal only to RH",
            "type": "boolean"
          },
          "subject": {
            "description": "The email subject",
            "type": "string"
          },
          "subscription_id": {
            "description": "Indicates which Subscription the resource type belongs to",
            "type": "string"
          },
          "template_name": {
            "description": "The name of the template used to construct the email contents",
            "type": "string"
          },
          "template_parameters": {
            "description": "The values which will be substituted into the templated email",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TemplateParameter"
            }
          }
        }
      },
      "SubscriptionRegistration": {
        "description": "Registration of a new subscription.",
        "properties": {
          "cluster_uuid": {
            "description": "External cluster ID.",
            "type": "string"
          },
          "console_url": {
            "description": "Console URL of subscription (optional).",
            "type": "string"
          },
          "display_name": {
            "description": "Display name of subscription (optional).",
            "type": "string"
          },
          "plan_id": {
            "description": "Plan ID of subscription.",
            "$ref": "#/components/schemas/PlanID"
          },
          "status": {
            "description": "Status of subscription.",
            "type": "string"
          }
        }
      },
      "SummaryDashboard": {
        "properties": {
          "kind": {
            "description": "Indicates the type of this object. Will be 'SummaryDashboard' if this is a complete object or 'SummaryDashboardLink' if it is just a link.",
            "type": "string"
          },
          "id": {
            "description": "Unique identifier of the object.",
            "type": "string"
          },
          "href": {
            "description": "Self link.",
            "type": "string"
          },
          "metrics": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SummaryMetrics"
            }
          }
        }
      },
      "SummaryMetrics": {
        "properties": {
          "name": {
            "type": "string"
          },
          "vector": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SummarySample"
            }
          }
        }
      },
      "SummarySample": {
        "properties": {
          "time": {
            "type": "string"
          },
          "value": {
            "type": "number",
            "format": "float"
          }
        }
      },
      "SupportCaseRequest": {
        "properties": {
          "kind": {
            "description": "Indicates the type of this object. Will be 'SupportCaseRequest' if this is a complete object or 'SupportCaseRequestLink' if it is just a link.",
            "type": "string"
          },
          "id": {
            "description": "Unique identifier of the object.",
            "type": "string"
          },
          "href": {
            "description": "Self link.",
            "type": "string"
          },
          "cluster_id": {
            "description": "(optional) cluster id of the cluster on which we create the support case for.",
            "type": "string"
          },
          "cluster_uuid": {
            "description": "(optional) cluster uuid of the cluster on which we create the support case for.",
            "type": "string"
          },
          "description": {
            "description": "Support case desciption.",
            "type": "string"
          },
          "event_stream_id": {
            "description": "(optional) event stream id for the support case so we could track it.",
            "type": "string"
          },
          "severity": {
            "description": "Support case severity.",
            "type": "string"
          },
          "subscription_id": {
            "description": "(optional) subscription id of the subscription on which we create the support case for.",
            "type": "string"
          },
          "summary": {
            "description": "Support case title.",
            "type": "string"
          }
        }
      },
      "SupportCaseResponse": {
        "properties": {
          "kind": {
            "description": "Indicates the type of this object. Will be 'SupportCaseResponse' if this is a complete object or 'SupportCaseResponseLink' if it is just a link.",
            "type": "string"
          },
          "id": {
            "description": "Unique identifier of the object.",
            "type": "string"
          },
          "href": {
            "description": "Self link.",
            "type": "string"
          },
          "uri": {
            "description": "Support case uri.",
            "type": "string"
          },
          "case_number": {
            "description": "Support case number.",
            "type": "string"
          },
          "cluster_id": {
            "description": "(optional) cluster id of the cluster on which we created the support case for.",
            "type": "string"
          },
          "cluster_uuid": {
            "description": "(optional) cluster uuid of the cluster on which we created the support case for.",
            "type": "string"
          },
          "description": {
            "description": "Support case desciption.",
            "type": "string"
          },
          "severity": {
            "description": "Support case severity.",
            "type": "string"
          },
          "status": {
            "description": "Support case status.",
            "type": "string"
          },
          "subscription_id": {
            "description": "(optional) subscription id of the subscription on which we created the support case for.",
            "type": "string"
          },
          "summary": {
            "description": "Support case title.",
            "type": "string"
          }
        }
      },
      "TemplateParameter": {
        "description": "A template parameter is used in an email to replace placeholder content with\nvalues specific to the email recipient.",
        "properties": {
          "content": {
            "description": "The content that will replace the template parameter in the email",
            "type": "string"
          },
          "name": {
            "description": "Name of the value to be replaced",
            "type": "string"
          }
        }
      },
      "TokenAuthorizationRequest": {
        "properties": {
          "authorization_token": {
            "description": "The pull secret of a given account",
            "type": "string"
          }
        }
      },
      "TokenAuthorizationResponse": {
        "properties": {
          "account": {
            "$ref": "#/components/schemas/Account"
          }
        }
      },
      "ValueUnit": {
        "properties": {
          "unit": {
            "type": "string"
          },
          "value": {
            "type": "number",
            "format": "float"
          }
        }
      },
      "Error": {
        "type": "object",
        "properties": {
          "kind": {
            "description": "Indicates the type of this object. Will always be 'Error'",
            "type": "string"
          },
          "id": {
            "description": "Numeric identifier of the error.",
            "type": "integer",
            "format": "int32"
          },
          "href": {
            "description": "Self link.",
            "type": "string"
          },
          "code": {
            "description": "Globally unique code of the error, composed of the unique identifier of the API and the numeric identifier of the error. For example, for if the numeric identifier of the error is `93` and the identifier of the API is `clusters_mgmt` then the code will be `CLUSTERS-MGMT-93`.",
            "type": "string"
          },
          "reason": {
            "description": "Human readable description of the error.",
            "type": "string"
          },
          "details": {
            "description": "Extra information about the error.",
            "type": "object",
            "additionalProperties": true
          }
        }
      }
    },
    "securitySchemes": {
      "bearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  },
  "security": [
    {
      "bearer": [
        
      ]
    }
  ]
}